server:
  port: 6002

spring:
  application:
    name: module-data-standard
  cloud:
    nacos:
      # 服务注册地址
      discovery:
        server-addr: ${nacos.service.url:172.24.15.12:8848,172.24.15.12:8849,172.24.15.12:8850}

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${mysql.service.user.name}
    password: ${mysql.service.password}
    url: jdbc:mysql://${mysql.service.address}/warehouse_data?useUnicode=true&characterEncoding=utf-8&useSSL=false
    druid:
      name: default-datasource
      ## 基本配置
      initialSize: ${mysql.druid.initial.size:20} #初始话连接池个数
      minIdle: ${mysql.druid.minIdel:20} #最小连接池个数
      maxActive: ${mysql.druid.maxActive:100} #最大连接池个数
      maxWait: ${mysql.druid.maxWait:2000} #配置获取连接等待超时时间，单位：ms
      timeBetweenEvictionRunsMillis: 60000 #配置间隔多久进行一次检测，检测需要关闭的空闲连接，单位：ms
      ### 超过时间限制是否回收
      removeAbandoned: true
      ### 超时时间(秒)
      removeAbandonedTimeout: 180
      ### 关闭abanded连接时输出错误日志
      logAbandoned: true
      ### 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      ### 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 30
      ### 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat
      ### 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      break-after-acquire-failure: true
      connection-error-retry-attempts: 5
      time-between-connect-error-millis: 10000

  #哨兵模式
  #  redis:
  #    database: 4
  #    timeout: 3000
  #    sentinel:    #哨兵模式
  #      master: local-master #主服务器所在集群名称
  #      nodes: ${redis.sentinel.nodes}
  #      password: ${redis.password}
  #    lettuce:
  #      pool:
  #        max-idle: 50
  #        min-idle: 10
  #        max-active: 100
  #        max-wait: 1000

  # 集群模式
  redis:
    cluster:
      nodes: ${redis.sentinel.nodes}
    password: ${redis.password}
    database: 4
    lettuce:
      pool:
        max-idle: 50
        min-idle: 10
        max-active: 100
        max-wait: 1000
  servlet:
    multipart:
      max-file-size: 2000MB
      max-request-size: 2000MB
      file-size-threshold: 5MB
  #mybatis-plus
mybatis-plus:
  global-config:
    banner: false

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

logging:
  config: classpath:log4j2.xml

management: #开启SpringBoot Admin的监控
  endpoints:
    promethus:
      enable: true
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


dnt:
  swagger:
    enable: true
  #飞书消息提醒
  feishui:
    notice:
      url: https://open.feishu.cn/open-apis/bot/v2/hook/bda49181-ec38-4cbe-a1b6-fc6341a43b65
  feign:
    data:
      source:
        client:
          url: http://172.24.15.10:8798/datasource
    dev:
      gateway:
        url: http://172.24.15.10:9798
      data:
        source:
          client:
            url: ${dnt.feign.dev.gateway.url}/datasource
      project:
        client:
          url: ${dnt.feign.dev.gateway.url}/project
    test:
      gateway:
        url: http://172.24.15.10:8798
      data:
        source:
          client:
            url: ${dnt.feign.test.gateway.url}/datasource
      project:
        client:
          url: ${dnt.feign.test.gateway.url}/project
    prod:
      gateway:
        url: http://172.24.15.10:8798
      data:
        source:
          client:
            url: ${dnt.feign.prod.gateway.url}/datasource
      project:
        client:
          url: ${dnt.feign.prod.gateway.url}/project
#feign日志级别配置
feign:
  client:
    config:
      dnt-management-datasource:
        loggerLevel: BASIC